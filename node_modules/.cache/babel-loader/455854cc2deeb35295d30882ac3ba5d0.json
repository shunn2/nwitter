{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chsid\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\Twitter_Clone\\\\twitter\\\\src\\\\routes\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (newAccount) {\n        const data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        const data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/chsid/OneDrive/바탕 화면/React/Twitter_Clone/twitter/src/routes/Auth.js"],"names":["authService","firebaseInstance","React","useState","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","toggleAccount","prev","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup"],"mappings":"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","sourcesContent":["import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name ===\"password\") {\r\n            setPassword(value);\r\n        }\r\n    }; \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if(newAccount){\r\n                const data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }else {\r\n                const data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    const onSocialClick = async(event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}