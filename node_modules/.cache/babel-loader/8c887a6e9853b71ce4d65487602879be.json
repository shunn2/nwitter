{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chsid\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\Twitter_Clone\\\\twitter\\\\src\\\\routes\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useEffect, useState } from \"react\";\nimport Ntweet from \"components/Ntweet\";\nimport NtweetFac from \"components/NtweetFac\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    userObj\n  } = _ref;\n  const [ntweets, setNtweets] = useState([]); // 이 방법을 하면 리렌더링되서 실시간 반영이 안됨.\n  //   const getNtweets = async () => {\n  //     const dbntweets = await dbService.collection(\"ntweets\").get();\n  //     dbntweets.forEach((document) => {\n  //       const ntweetObject = {\n  //         ...document.data(),\n  //         id: document.id,\n  //       };\n  //       setNtweets((prev) => [ntweetObject, ...prev]);\n  //     }); // 새로 작성한 것들과 이전의 것들을 합쳐서 배열로 리턴함.\n  //   };\n\n  useEffect(() => {\n    // getNtweets();\n    dbService.collection(\"ntweets\").onSnapshot(snapshot => {\n      const ntweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setNtweets(ntweetArray);\n    });\n  }, []); //   useEffect(() => {\n  //     dbService.collection(\"ntweets\").get();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NtweetFac, {\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ntweets.map(ntweet => /*#__PURE__*/_jsxDEV(Ntweet, {\n        ntweetObj: ntweet,\n        isOwner: ntweet.creatorId === userObj.uid\n      }, ntweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"xGgmhKzRPjMdbcfKsCswEucfFqQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/chsid/OneDrive/바탕 화면/React/Twitter_Clone/twitter/src/routes/Home.js"],"names":["dbService","storageService","v4","uuidv4","React","useEffect","useState","Ntweet","NtweetFac","Home","userObj","ntweets","setNtweets","collection","onSnapshot","snapshot","ntweetArray","docs","map","doc","id","data","ntweet","creatorId","uid"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,OAA1C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAEA,MAAMC,IAAI,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC,CAD4B,CAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAL,IAAAA,SAAS,CAACa,UAAV,CAAqB,SAArB,EAAgCC,UAAhC,CAA4CC,QAAD,IAAc;AACvD,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAAEC,QAAAA,EAAE,EAAED,GAAG,CAACC,EAAV;AAAc,WAAGD,GAAG,CAACE,IAAJ;AAAjB,OAAV,CAAlB,CAApB;AACAT,MAAAA,UAAU,CAACI,WAAD,CAAV;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT,CAb4B,CAoB5B;AACA;AACA;;AACA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGC,OAAO,CAACO,GAAR,CAAaI,MAAD,iBACX,QAAC,MAAD;AAAwB,QAAA,SAAS,EAAEA,MAAnC;AAA2C,QAAA,OAAO,EAAEA,MAAM,CAACC,SAAP,KAAqBb,OAAO,CAACc;AAAjF,SAAaF,MAAM,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjCD;;GAAMX,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Ntweet from \"components/Ntweet\";\r\nimport NtweetFac from \"components/NtweetFac\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [ntweets, setNtweets] = useState([]);\r\n  // 이 방법을 하면 리렌더링되서 실시간 반영이 안됨.\r\n  //   const getNtweets = async () => {\r\n  //     const dbntweets = await dbService.collection(\"ntweets\").get();\r\n  //     dbntweets.forEach((document) => {\r\n  //       const ntweetObject = {\r\n  //         ...document.data(),\r\n  //         id: document.id,\r\n  //       };\r\n  //       setNtweets((prev) => [ntweetObject, ...prev]);\r\n  //     }); // 새로 작성한 것들과 이전의 것들을 합쳐서 배열로 리턴함.\r\n  //   };\r\n  useEffect(() => {\r\n    // getNtweets();\r\n    dbService.collection(\"ntweets\").onSnapshot((snapshot) => {\r\n      const ntweetArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n      setNtweets(ntweetArray);\r\n    });\r\n  }, []);\r\n  //   useEffect(() => {\r\n  //     dbService.collection(\"ntweets\").get();\r\n  //   }, []);\r\n  return (\r\n    <div>\r\n      <NtweetFac userObj={userObj} />\r\n      <div>\r\n        {ntweets.map((ntweet) => (\r\n          <Ntweet key={ntweet.id} ntweetObj={ntweet} isOwner={ntweet.creatorId === userObj.uid} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}