{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chsid\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\React\\\\Twitter_Clone\\\\twitter\\\\src\\\\components\\\\NtweetFac.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { storageService, dbService } from \"fbase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NtweetFac = () => {\n  _s();\n\n  const [ntweet, setNtweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const ntweetUpload = {\n      text: ntweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"ntweets\").add(ntweetUpload);\n    setNtweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNtweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0]; //log에서 알아냄 후에 fileReader API 사용\n\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result); //url\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearPhotoClick = () => setAttachment(null);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: ntweet,\n      onChange: onChange,\n      type: \"text\",\n      placeholder: \"What's on your mind?\",\n      maxLength: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Ntweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachment,\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearPhotoClick,\n        children: \"Clear Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NtweetFac, \"qVIo1yoTh1oWRT6PXlpYr0h9+x0=\");\n\n_c = NtweetFac;\nexport default NtweetFac;\n\nvar _c;\n\n$RefreshReg$(_c, \"NtweetFac\");","map":{"version":3,"sources":["C:/Users/chsid/OneDrive/바탕 화면/React/Twitter_Clone/twitter/src/components/NtweetFac.js"],"names":["React","storageService","dbService","NtweetFac","ntweet","setNtweet","useState","attachment","setAttachment","onSubmit","event","preventDefault","attachmentUrl","attachmentRef","ref","child","userObj","uid","uuidv4","response","putString","getDownloadURL","ntweetUpload","text","createdAt","Date","now","creatorId","collection","add","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearPhotoClick"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\n\r\nconst NtweetFac = () => {\r\n  const [ntweet, setNtweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const ntweetUpload = {\r\n      text: ntweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"ntweets\").add(ntweetUpload);\r\n    setNtweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNtweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0]; //log에서 알아냄 후에 fileReader API 사용\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result); //url\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearPhotoClick = () => setAttachment(null);\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input value={ntweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Ntweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearPhotoClick}>Clear Photo</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NtweetFac;\r\n"]},"metadata":{},"sourceType":"module"}